basePath: /v1
definitions:
  models.SysDept:
    properties:
      createdAt:
        description: 创建时间
        type: string
      deptName:
        description: 部门名称
        type: string
      deptSort:
        description: 显示排序
        type: integer
      id:
        description: 主键
        type: integer
      leader:
        description: 负责人
        type: string
      parentId:
        description: 父部门ID
        type: integer
      phone:
        description: 联系电话
        type: string
      remark:
        description: 备注
        type: string
      status:
        description: 启用状态 0 启用 1 禁用
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  models.SysDictData:
    properties:
      createBy:
        description: 创建者
        type: string
      createdAt:
        description: 创建时间
        type: string
      dictLabel:
        description: 字典标签
        type: string
      dictSort:
        description: 字典排序
        type: integer
      dictValue:
        description: 字典键值
        type: string
      id:
        description: 主键
        type: integer
      remark:
        description: 备注
        type: string
      status:
        description: 启用状态 0 启用 1 禁用
        type: boolean
      updatedAt:
        description: 更新时间
        type: string
    type: object
  models.SysDictType:
    properties:
      createdAt:
        description: 创建时间
        type: string
      dictName:
        description: 字典名称
        type: string
      dictType:
        description: 字典类型
        type: string
      id:
        description: 主键
        type: integer
      remark:
        description: 备注
        type: string
      status:
        description: 启用状态 0 启用 1 禁用
        type: boolean
      updatedAt:
        description: 更新时间
        type: string
    type: object
  models.SysMenu:
    properties:
      component:
        description: 组件路径
        type: string
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键
        type: integer
      isCache:
        description: 是否缓存 0缓存 1不缓存
        type: boolean
      isFrame:
        description: 是否外链 0是 1否
        type: boolean
      menuIcon:
        description: 菜单图标
        type: string
      menuName:
        description: 菜单名称
        type: string
      menuSort:
        description: 显示排序
        type: integer
      menuType:
        description: 菜单类型 0目录 1菜单 2按钮
        type: boolean
      parentId:
        description: 父菜单ID
        type: integer
      parentName:
        description: 父菜单名称
        type: string
      perms:
        description: 权限标识
        type: string
      query:
        description: 路由参数
        type: string
      remark:
        description: 备注
        type: string
      router:
        description: 路由地址
        type: string
      status:
        description: 菜单状态 0正常 1停用
        type: boolean
      updatedAt:
        description: 更新时间
        type: string
      visible:
        description: 菜单状态 0显示 1隐藏
        type: boolean
    type: object
  models.SysPost:
    properties:
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键
        type: integer
      postCode:
        description: 岗位编码
        type: string
      postName:
        description: 岗位名称
        type: string
      postSort:
        description: 岗位排序
        type: integer
      remark:
        description: 备注
        type: string
      status:
        description: 启用状态 0 启用 1 禁用
        type: boolean
      updatedAt:
        description: 更新时间
        type: string
    type: object
  models.SysRole:
    properties:
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键
        type: integer
      remark:
        description: 备注
        type: string
      roleKey:
        description: 角色标识
        type: string
      roleName:
        description: 角色名称
        type: string
      roleSort:
        description: 角色排序
        type: integer
      status:
        description: 启用状态 0 启用 1 禁用
        type: boolean
      updatedAt:
        description: 更新时间
        type: string
    type: object
  models.SysUser:
    properties:
      avatar:
        description: 头像
        type: string
      createdAt:
        description: 创建时间
        type: string
      delFlag:
        description: 删除状态 0 正常 1删除
        type: integer
      deptId:
        description: 部门id
        type: integer
      email:
        description: 邮箱
        type: string
      gender:
        description: 性别 0未知 1男 2 女
        type: integer
      id:
        description: 主键
        type: integer
      nickName:
        description: 用户昵称
        type: string
      phone:
        description: 手机号
        type: string
      remark:
        description: 备注
        type: string
      status:
        description: 启用状态 0 启用 1 禁用
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      username:
        description: 用户名
        type: string
    type: object
  request.CreateDeptRequest:
    properties:
      deptName:
        description: 部门名称
        type: string
      deptSort:
        description: 显示排序
        type: integer
      leader:
        description: 负责人
        type: string
      parentId:
        description: 父部门ID
        type: integer
      phone:
        description: 联系电话
        type: string
      remark:
        description: 备注
        type: string
      status:
        description: 启用状态 0 启用 1 禁用
        type: integer
    type: object
  request.CreateDictDataRequest:
    properties:
      createBy:
        description: 创建者
        type: string
      dictLabel:
        description: 字典标签
        type: string
      dictSort:
        description: 字典排序
        type: integer
      dictValue:
        description: 字典键值
        type: string
      remark:
        description: 备注
        type: string
      status:
        description: 启用状态 0 启用 1 禁用
        type: boolean
    type: object
  request.CreateDictTypeRequest:
    properties:
      dictName:
        description: 字典名称
        type: string
      dictType:
        description: 字典类型
        type: string
      remark:
        description: 备注
        type: string
      status:
        description: 启用状态 0 启用 1 禁用
        type: boolean
    type: object
  request.CreateMenuRequest:
    properties:
      component:
        description: 组件路径
        type: string
      isCache:
        description: 是否缓存 0缓存 1不缓存
        type: boolean
      isFrame:
        description: 是否外链 0是 1否
        type: boolean
      menuIcon:
        description: 菜单图标
        type: string
      menuName:
        description: 菜单名称
        type: string
      menuSort:
        description: 显示排序
        type: integer
      menuType:
        description: 菜单类型 0目录 1菜单 2按钮
        type: boolean
      parentId:
        description: 父菜单ID
        type: integer
      parentName:
        description: 父菜单名称
        type: string
      perms:
        description: 权限标识
        type: string
      query:
        description: 路由参数
        type: string
      remark:
        description: 备注
        type: string
      router:
        description: 路由地址
        type: string
      status:
        description: 菜单状态 0正常 1停用
        type: boolean
      visible:
        description: 菜单状态 0显示 1隐藏
        type: boolean
    type: object
  request.CreatePostRequest:
    properties:
      postCode:
        description: 岗位编码
        type: string
      postName:
        description: 岗位名称
        type: string
      postSort:
        description: 岗位排序
        type: integer
      remark:
        description: 备注
        type: string
      status:
        description: 启用状态 0 启用 1 禁用
        type: boolean
    type: object
  request.CreateRoleRequest:
    properties:
      remark:
        description: 备注
        type: string
      roleKey:
        description: 角色标识
        type: string
      roleName:
        description: 角色名称
        type: string
      roleSort:
        description: 角色排序
        type: integer
      status:
        description: 启用状态 0 启用 1 禁用
        type: boolean
    type: object
  request.CreateUserRequest:
    properties:
      avatar:
        description: 头像
        type: string
      delFlag:
        description: 删除状态 0 正常 1删除
        type: integer
      deptId:
        description: 部门id
        type: integer
      email:
        description: 邮箱
        type: string
      gender:
        description: 性别 0未知 1男 2 女
        type: integer
      nickName:
        description: 用户昵称
        type: string
      phone:
        description: 手机号
        type: string
      remark:
        description: 备注
        type: string
      status:
        description: 启用状态 0 启用 1 禁用
        type: integer
      username:
        description: 用户名
        type: string
    type: object
  request.SignRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  request.UpdateDeptRequest:
    properties:
      deptName:
        description: 部门名称
        type: string
      deptSort:
        description: 显示排序
        type: integer
      id:
        type: integer
      leader:
        description: 负责人
        type: string
      parentId:
        description: 父部门ID
        type: integer
      phone:
        description: 联系电话
        type: string
      remark:
        description: 备注
        type: string
      status:
        description: 启用状态 0 启用 1 禁用
        type: integer
    type: object
  request.UpdateDictDataRequest:
    properties:
      createBy:
        description: 创建者
        type: string
      dictLabel:
        description: 字典标签
        type: string
      dictSort:
        description: 字典排序
        type: integer
      dictValue:
        description: 字典键值
        type: string
      id:
        type: integer
      remark:
        description: 备注
        type: string
      status:
        description: 启用状态 0 启用 1 禁用
        type: boolean
    type: object
  request.UpdateDictTypeRequest:
    properties:
      dictName:
        description: 字典名称
        type: string
      dictType:
        description: 字典类型
        type: string
      id:
        type: integer
      remark:
        description: 备注
        type: string
      status:
        description: 启用状态 0 启用 1 禁用
        type: boolean
    type: object
  request.UpdateMenuRequest:
    properties:
      component:
        description: 组件路径
        type: string
      id:
        type: integer
      isCache:
        description: 是否缓存 0缓存 1不缓存
        type: boolean
      isFrame:
        description: 是否外链 0是 1否
        type: boolean
      menuIcon:
        description: 菜单图标
        type: string
      menuName:
        description: 菜单名称
        type: string
      menuSort:
        description: 显示排序
        type: integer
      menuType:
        description: 菜单类型 0目录 1菜单 2按钮
        type: boolean
      parentId:
        description: 父菜单ID
        type: integer
      parentName:
        description: 父菜单名称
        type: string
      perms:
        description: 权限标识
        type: string
      query:
        description: 路由参数
        type: string
      remark:
        description: 备注
        type: string
      router:
        description: 路由地址
        type: string
      status:
        description: 菜单状态 0正常 1停用
        type: boolean
      visible:
        description: 菜单状态 0显示 1隐藏
        type: boolean
    type: object
  request.UpdateRoleRequest:
    properties:
      id:
        type: integer
      remark:
        description: 备注
        type: string
      roleKey:
        description: 角色标识
        type: string
      roleName:
        description: 角色名称
        type: string
      roleSort:
        description: 角色排序
        type: integer
      status:
        description: 启用状态 0 启用 1 禁用
        type: boolean
    type: object
  request.UpdateUserRequest:
    properties:
      avatar:
        description: 头像
        type: string
      delFlag:
        description: 删除状态 0 正常 1删除
        type: integer
      deptId:
        description: 部门id
        type: integer
      email:
        description: 邮箱
        type: string
      gender:
        description: 性别 0未知 1男 2 女
        type: integer
      id:
        type: integer
      nickName:
        description: 用户昵称
        type: string
      phone:
        description: 手机号
        type: string
      remark:
        description: 备注
        type: string
      status:
        description: 启用状态 0 启用 1 禁用
        type: integer
      username:
        description: 用户名
        type: string
    type: object
  response.GetUserInfoResponse:
    properties:
      avatar:
        type: string
      desc:
        type: string
      realName:
        type: string
      roles:
        items:
          type: string
        type: array
      userId:
        type: integer
      username:
        type: string
    type: object
  response.PageResponse:
    properties:
      list: {}
      total:
        type: integer
    type: object
  response.SignResponse:
    properties:
      accessToken:
        type: string
      expiresIn:
        type: integer
    type: object
  result.HttpResult:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
host: localhost:8000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: go-admin-api
  version: "1.0"
paths:
  /dept/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建部门
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreateDeptRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/result.HttpResult'
      summary: 创建部门
      tags:
      - 部门管理
  /dept/delete/{id}:
    delete:
      parameters:
      - description: 部门id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/result.HttpResult'
      summary: 删除部门
      tags:
      - 部门管理
  /dept/info/{id}:
    get:
      parameters:
      - description: 部门id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/result.HttpResult'
            - properties:
                data:
                  $ref: '#/definitions/models.SysDept'
              type: object
      summary: 部门详情
      tags:
      - 部门管理
  /dept/page:
    get:
      consumes:
      - application/json
      parameters:
      - description: 部门名称
        in: query
        name: deptName
        type: string
      - description: 启用状态 0 启用 1 禁用
        in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/result.HttpResult'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.PageResponse'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.SysDept'
                        type: array
                    type: object
              type: object
      summary: 部门列表
      tags:
      - 部门管理
  /dept/update:
    patch:
      consumes:
      - application/json
      parameters:
      - description: 更新部门
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UpdateDeptRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/result.HttpResult'
      summary: 更新部门
      tags:
      - 部门管理
  /dictData/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建字典数据
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreateDictDataRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/result.HttpResult'
      summary: 创建字典数据
      tags:
      - 数据字典数据
  /dictData/delete/{id}:
    delete:
      parameters:
      - description: 字典数据id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/result.HttpResult'
      summary: 删除字典数据
      tags:
      - 数据字典数据
  /dictData/info/{id}:
    get:
      parameters:
      - description: 字典数据id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/result.HttpResult'
      summary: 字典数据详情
      tags:
      - 数据字典数据
  /dictData/page:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/result.HttpResult'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.PageResponse'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.SysDictData'
                        type: array
                    type: object
              type: object
      summary: 字典数据列表
      tags:
      - 数据字典数据
  /dictData/update:
    patch:
      consumes:
      - application/json
      parameters:
      - description: 更新字典数据
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UpdateDictDataRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/result.HttpResult'
      summary: 更新字典数据
      tags:
      - 数据字典数据
  /dictType/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建字典类型
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreateDictTypeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/result.HttpResult'
      summary: 创建字典类型
      tags:
      - 数据字典类型
  /dictType/delete/{id}:
    delete:
      parameters:
      - description: 字典类型id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/result.HttpResult'
      summary: 删除字典类型
      tags:
      - 数据字典类型
  /dictType/info/{id}:
    get:
      parameters:
      - description: 字典类型id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/result.HttpResult'
      summary: 字典类型详情
      tags:
      - 数据字典类型
  /dictType/page:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/result.HttpResult'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.PageResponse'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.SysDictType'
                        type: array
                    type: object
              type: object
      summary: 字典类型列表
      tags:
      - 数据字典类型
  /dictType/update:
    patch:
      consumes:
      - application/json
      parameters:
      - description: 更新字典类型
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UpdateDictTypeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/result.HttpResult'
      summary: 更新字典类型
      tags:
      - 数据字典类型
  /login/sign:
    post:
      parameters:
      - description: 用户登录
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.SignRequest'
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/result.HttpResult'
            - properties:
                data:
                  $ref: '#/definitions/response.SignResponse'
              type: object
      summary: 用户登录
      tags:
      - 授权
  /menu/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建菜单
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreateMenuRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/result.HttpResult'
      summary: 创建菜单
      tags:
      - 菜单管理
  /menu/delete/{id}:
    delete:
      parameters:
      - description: 菜单id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/result.HttpResult'
      summary: 删除菜单
      tags:
      - 菜单管理
  /menu/info/{id}:
    get:
      parameters:
      - description: 菜单id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/result.HttpResult'
            - properties:
                data:
                  $ref: '#/definitions/models.SysMenu'
              type: object
      summary: 菜单详情
      tags:
      - 菜单管理
  /menu/list:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/result.HttpResult'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.PageResponse'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.SysMenu'
                        type: array
                    type: object
              type: object
      summary: 菜单列表
      tags:
      - 菜单管理
  /menu/page:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/result.HttpResult'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.PageResponse'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.SysMenu'
                        type: array
                    type: object
              type: object
      summary: 菜单列表分页
      tags:
      - 菜单管理
  /menu/update:
    patch:
      consumes:
      - application/json
      parameters:
      - description: 创建菜单
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UpdateMenuRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/result.HttpResult'
      summary: 创建菜单
      tags:
      - 菜单管理
  /post/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建岗位
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreatePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/result.HttpResult'
      summary: 创建岗位
      tags:
      - 岗位管理
  /post/delete/{id}:
    delete:
      parameters:
      - description: 岗位id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/result.HttpResult'
      summary: 删除岗位
      tags:
      - 岗位管理
  /post/info/{id}:
    get:
      parameters:
      - description: 岗位id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/result.HttpResult'
      summary: 岗位详情
      tags:
      - 岗位管理
  /post/page:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/result.HttpResult'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.PageResponse'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.SysPost'
                        type: array
                    type: object
              type: object
      summary: 岗位列表
      tags:
      - 岗位管理
  /post/update:
    patch:
      consumes:
      - application/json
      parameters:
      - description: 更新岗位
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UpdateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/result.HttpResult'
      summary: 更新岗位
      tags:
      - 岗位管理
  /role/create:
    patch:
      consumes:
      - application/json
      parameters:
      - description: 更新角色
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UpdateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/result.HttpResult'
      summary: 更新角色
      tags:
      - 角色管理
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建角色
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/result.HttpResult'
      summary: 创建角色
      tags:
      - 角色管理
  /role/delete/{id}:
    delete:
      parameters:
      - description: 角色id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/result.HttpResult'
      summary: 删除角色
      tags:
      - 角色管理
  /role/info/{id}:
    get:
      parameters:
      - description: 角色id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/result.HttpResult'
            - properties:
                data:
                  $ref: '#/definitions/models.SysRole'
              type: object
      summary: 角色详情
      tags:
      - 角色管理
  /role/page:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/result.HttpResult'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.PageResponse'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.SysRole'
                        type: array
                    type: object
              type: object
      summary: 角色列表
      tags:
      - 角色管理
  /user/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建用户
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/result.HttpResult'
      summary: 创建用户
      tags:
      - 用户管理
  /user/delete/{id}:
    delete:
      parameters:
      - description: 用户id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/result.HttpResult'
      summary: 删除用户
      tags:
      - 用户管理
  /user/getUserInfo:
    get:
      parameters:
      - description: 用户信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.SignRequest'
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/result.HttpResult'
            - properties:
                data:
                  $ref: '#/definitions/response.GetUserInfoResponse'
              type: object
      summary: 获取用户信息
      tags:
      - 用户管理
  /user/info/{id}:
    get:
      parameters:
      - description: 用户id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/result.HttpResult'
            - properties:
                data:
                  $ref: '#/definitions/models.SysUser'
              type: object
      summary: 用户详情
      tags:
      - 用户管理
  /user/page:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/result.HttpResult'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.PageResponse'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.SysUser'
                        type: array
                    type: object
              type: object
      summary: 用户列表
      tags:
      - 用户管理
  /user/update:
    patch:
      consumes:
      - application/json
      parameters:
      - description: 更新用户
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            $ref: '#/definitions/result.HttpResult'
      summary: 更新用户信息
      tags:
      - 用户管理
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
